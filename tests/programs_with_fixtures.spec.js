const { test, expect } = require("@playwright/test")
const TestData = JSON.parse(JSON.stringify(require("./data/credentials.json")))
const { POManager } = require("../pageObjects/POManager")
const { customtest } = require('../pageObjects/utilities/test-base')


//test.describe.configure({mode : 'serial'});
customtest("Launch browser using context", async function ({ browser, testData }) {
    const context = await browser.newContext()
    const page = await context.newPage()
    const poManager = new POManager(page)
    const homepage = poManager.getHomePage()
    const feedPage = poManager.getFeedPage()
    const navigationUser = poManager.getNavigationUser()
    const navigationAdmin = poManager.getNavigationAdmin()
    const mentoringProgramsBoardPage = poManager.getMentoringProgramsBoardPage()
    const mentoringProgramsCardPage = poManager.getMentoringProgramsCardPage()
    const mentoringProgramsPostPage = poManager.getMentoringProgramsPostPage()
    await homepage.goTo()
    console.log(await page.title());
    await expect(page).toHaveTitle(TestData.title)
    await homepage.openSignInOptions()
    await homepage.emailAndPasswordLogin(testData.userName, testData.password)
    await navigationUser.goToFeed()
    await expect(feedPage.feedPost.nth(0)).toHaveText(TestData.feed)
    console.log(await feedPage.feedPost.allTextContents())
    await feedPage.clickWhatsOnYourMind()
    await feedPage.enterFeedPost(TestData.feed)
    await feedPage.clickPost()
    await navigationUser.goToAdminView()
    await navigationAdmin.goToGradCarees()
    await navigationAdmin.goToPrograms()
    await mentoringProgramsBoardPage.createProgram()
    await mentoringProgramsPostPage.fillName(TestData.name)
    await mentoringProgramsPostPage.clickCreateProgram()
    await mentoringProgramsCardPage.clickAddUsers()
    await mentoringProgramsCardPage.selectAllUsersRadioButton()
    await mentoringProgramsCardPage.goToProgram()
    await mentoringProgramsCardPage.clickStartMatching()
    await mentoringProgramsCardPage.selectMentorsForMenteeRadioButton()
    await mentoringProgramsCardPage.clickShowMatches()
    await mentoringProgramsCardPage.matchUser()
    await mentoringProgramsCardPage.chooseMentor()
    await mentoringProgramsCardPage.send()
    await navigationAdmin.goToGradCarees()
    await navigationAdmin.goToPrograms()
    await mentoringProgramsBoardPage.clickDelete()

})


